using Grynwald.MdDocs.ApiReference.Model.XmlDocs;

namespace Grynwald.MdDocs.ApiReference.Model
{
    /// <summary>
    /// Identifies a member in an assembly.
    /// This can be types, methods, properties, fields, events or namespaces.
    /// </summary>
    public abstract class MemberId
    {
        // force re-implementation of equality members

        public abstract override bool Equals(object obj);

        public abstract override int GetHashCode();


        // private protected constructor => prevent implementation outside of this assembly
        private protected MemberId()
        { }


        /// <summary>
        /// Parses the specified value into a <see cref="MemberId"/>.
        /// </summary>
        /// <remarks>
        /// The values is assumed to be a member id as generated by the C# compiler
        /// in the xml documentation file for a assembly.
        /// For a description of the format see
        /// https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/xmldoc/processing-the-xml-file
        /// </remarks>
        /// <exception cref="MemberIdParserException">Thrown when the specified value could not be parsed as member id.</exception>
        public static MemberId Parse(string value)
        {
            var parser = new MemberIdParser(value);
            return parser.Parse();
        }
    }
}
