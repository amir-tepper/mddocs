<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;netstandard2.0</TargetFrameworks>
    <IsPackable>true</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.0.0" ExcludeAssets="runtime" />
    <PackageReference Include="nugetizer" Version="0.9.1" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\MdDocs.ApiReference\Grynwald.MdDocs.ApiReference.csproj" />
    <ProjectReference Include="..\MdDocs.CommandLineHelp\Grynwald.MdDocs.CommandLineHelp.csproj" />
    <ProjectReference Include="..\MdDocs.Common\Grynwald.MdDocs.Common.csproj" />
  </ItemGroup>

  <!-- Adjust NuGet package properties -->
  <PropertyGroup>
    <Description>MdDocs is a tool generate documentation as markdown files. This package integrates the generation of documentation into the build process.</Description>
    <PackageTags>$(PackageTags) msbuild</PackageTags>
    <DevelopmentDependency>true</DevelopmentDependency>
  </PropertyGroup>


  <!-- NuGet Packaging settings (see https://www.clarius.org/nugetizer/) -->
  <PropertyGroup>
    <!-- Copy all referenced assemblies to the output directory -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <PackProjectReferences>false</PackProjectReferences>
    <PackDependencies>false</PackDependencies>
    <PackFrameworkReferences>false</PackFrameworkReferences>
    <EnablePackInference>false</EnablePackInference>
  </PropertyGroup>

  <!-- Include files from the 'build' directory-->
  <ItemGroup>
    <None Remove="build\**\*" />
    <PackageFile Include="build\**\*" Pack="true" />
  </ItemGroup>

  <!--
    =================================================================================================
      Target "AddPackageContents"
    =================================================================================================
      Include the MSBuild tasks assembly and all it's dependencies in the NuGet package.

      Use Condition '$(TargetFramework)' != '' so the target only runs in the "inner build" 
      of this multi-targted project (so we include the task assembly in all versions we build)
  -->
  <Target Name="AddPackageContents" BeforeTargets="GetPackageContents" Condition=" '$(TargetFramework)' != '' ">
    <ItemGroup>
      <_BuildOutputFile Remove="*" />
      <_BuildOutputFile Include="$(OutputPath)\**\*.*" Exclude="$(OutputPath)\**\*.deps.json" />
    </ItemGroup>
    <ItemGroup>
      <PackageFile Include="@(_BuildOutputFile)" PackagePath="build\$(TargetFramework)\%(RecursiveDir)%(FileName)%(Extension)" />
    </ItemGroup>
  </Target>

  <!--
    =================================================================================================
      Target "AddMdDocsCliToPackage"
    =================================================================================================
      Include the MdDocs CLI tool and all its dependencies in the NuGet package under "tools\"

      Use Condition '$(TargetFramework)' == 'net472' so the target only runs once 
      in this multi-targted project (so we include tool only once)
  -->
  <Target Name="AddMdDocsCliToPackage"
          BeforeTargets="GetPackageContents"
          Condition=" '$(TargetFramework)' == 'net472' ">

    <PropertyGroup>
      <MdDocsCliTargetFramework>net6.0</MdDocsCliTargetFramework>
      <MdDocsPublishDir>$(OutputPath)..\tools\$(MdDocsCliTargetFramework)\</MdDocsPublishDir>
    </PropertyGroup>

    <Message Text="Publishing MdDocs CLI to '$(MdDocsPublishDir)'" />
    <MSBuild Projects="..\MdDocs\Grynwald.MdDocs.csproj"
             Targets="Publish"
             Properties="TargetFramework=$(MdDocsCliTargetFramework);PublishDir=$(MdDocsPublishDir);NoBuild=$(NoBuild)" />

    <ItemGroup>
      <_PublishedFile Remove="@(_PublishedFile)" />
      <_PublishedFile Include="$(MdDocsPublishDir)\**\*.*"
                      Exclude="$(MdDocsPublishDir)\mddocs.deps.json;$(MdDocsPublishDir)\mddocs.exe"/>
    </ItemGroup>
    <ItemGroup>
      <PackageFile Include="@(_PublishedFile)" PackagePath="tools\$(MdDocsCliTargetFramework)\%(RecursiveDir)%(FileName)%(Extension)" />
    </ItemGroup>

  </Target>

</Project>
