<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Select appropriate task assembly -->
  <PropertyGroup>
    <!-- Default to .NET Framework build-->
    <MdDocsTasksDirectory>$(MSBuildThisFileDirectory)net472/</MdDocsTasksDirectory>
    <!-- Overwrite property when running in .NET Core MSBuild-->
    <MdDocsTasksDirectory Condition="'$(MSBuildRuntimeType)' == 'Core'">$(MSBuildThisFileDirectory)netstandard2.0/</MdDocsTasksDirectory>
    
    <MdDocsTasksPath Condition="'$(MdDocsTasksPath)' == '' ">$(MdDocsTasksDirectory)Grynwald.MdDocs.MSBuild.dll</MdDocsTasksPath>    

    <MdDocsCliPath Condition=" '$(MdDocsCliPath)' == '' ">$(MSBuildThisFileDirectory)..\tools\net6.0\mddocs.dll</MdDocsCliPath>
  </PropertyGroup>

  <!-- Load custom task assembly -->
  <UsingTask AssemblyFile="$(MdDocsTasksPath)" TaskName="Grynwald.MdDocs.MSBuild.GenerateApiReferenceDocumentation"/>
  <UsingTask AssemblyFile="$(MdDocsTasksPath)" TaskName="Grynwald.MdDocs.MSBuild.GenerateCommandLineDocumentation"/>

  <!-- Define default values for properties: By default, disable generation of documentation -->
  <PropertyGroup>
    <GenerateApiReferenceDocumentationOnBuild Condition="'$(GenerateApiReferenceDocumentationOnBuild)' == ''">false</GenerateApiReferenceDocumentationOnBuild>
    <GenerateCommandLineDocumentationOnBuild Condition="'$(GenerateCommandLineDocumentationOnBuild)' == ''">false</GenerateCommandLineDocumentationOnBuild>    

    <!-- If configuration file path is not set, look for a file named 'mddocs.settings.json' in the project directory or a parent directory -->
    <MdDocsConfigurationFilePath Condition=" '$(MdDocsConfigurationFilePath)' == '' AND '$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), mddocs.settings.json))' != ''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), mddocs.settings.json))\mddocs.settings.json</MdDocsConfigurationFilePath>
  </PropertyGroup>
  
</Project>