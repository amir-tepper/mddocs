<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DemoProject</name>
    </assembly>
    <members>
        <member name="T:DemoProject.DemoAttribute">
            <summary>
            An example of an customa attribute class for methods
            </summary>
        </member>
        <member name="T:DemoProject.DemoClass">
            <summary>
            A class meant to demonstrate how the generated documentation looks like.
            </summary>
            <remarks>
            The main purpose of this class is to showcase the generated documentation.
            <para>
            For that purpose, the class aims to include as many code constructs relevant
            for the generated documentation as possible.
            </para>    
            <para>   
            For every type, MdDoc will create a seprate markdown page split into multiple sections.
            </para>
            <para>
            The type page starts with basic info about the type. This includes the type's namespace and assembly
            as well as the inheritance hierarchy, implemented interfaces and applied attribues.
            The type info will be followed by the summary provided in the xml documentation comments.
            </para>
            <para>
            If there are any remarks for the type, a "Remarks" section is added (the sections you are currently reading)
            </para>
            <para>
            All of a types constructors will be listed in a table in the "Constructors" section.
            The table contains a line for every constructor displaying the constructors signature
            and summary. As there is a separate page generated that provides more detailed infor about the
            constructor, a link to that page is inserted.
            </para>
            <para>
            Similar tables are generated for a type's public fields, events, properties, methods and operator overloads
            </para>
            <para>
            Links to other members are supported (using the xml tag <c>see</c>), for example a link to 
            <see cref="T:DemoProject.IDemoInterface" />. References to types outside the assembly are written to the output
            but cannot be linked to, e.g. a reference to <see cref="T:System.String"/>
            </para>
            <para>
            The last section is the "See Also" section with links provided inline using the <c>seealso</c> tag
            </para>
            </remarks>
            <seealso cref="T:DemoProject.IDemoInterface"/>
            <seealso cref="T:System.String">String might also be interesting</seealso>
            <seealso cref="T:DemoProject.DemoStruct">DemoStruct has a similar purpose but is a value type</seealso>    
        </member>
        <member name="F:DemoProject.DemoClass.Field1">
            <summary>
            A public field
            </summary>
        </member>
        <member name="E:DemoProject.DemoClass.OperationCompleted">
            <summary>
            Raised when the operation is finished
            </summary>
        </member>
        <member name="P:DemoProject.DemoClass.Property1">
            <summary>
            Gets the value of <see cref="P:DemoProject.DemoClass.Property1"/>
            </summary>
        </member>
        <member name="P:DemoProject.DemoClass.Property2">
            <summary>
            Gets the value of <see cref="P:DemoProject.DemoClass.Property2"/>
            </summary>
        </member>
        <member name="P:DemoProject.DemoClass.Item(System.Int32)">
            <summary>
            An example of an indexer with a single parameter.
            </summary>
        </member>
        <member name="P:DemoProject.DemoClass.Item(System.Int32,System.Int32)">
            <summary>
            An example of an indexer with two parameters.
            </summary>
        </member>
        <member name="M:DemoProject.DemoClass.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:DemoProject.DemoClass"/>
            </summary>
        </member>
        <member name="M:DemoProject.DemoClass.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:DemoProject.DemoClass"/> with the specified parameters
            </summary>
        </member>
        <member name="M:DemoProject.DemoClass.DoSomething(System.String)">
            <summary>
            Does something ;)
            </summary>        
        </member>
        <member name="M:DemoProject.DemoClass.DoSomethingElse">
            <summary>
            Does something else
            </summary>        
        </member>
        <member name="M:DemoProject.DemoClass.op_Addition(DemoProject.DemoClass,DemoProject.DemoClass)">
            <summary>
            Combines two instances of <see cref="T:DemoProject.DemoClass"/>
            </summary>
        </member>
        <member name="T:DemoProject.DemoEnum">
            <summary>
            An example of an user-defined enum
            </summary>
        </member>
        <member name="F:DemoProject.DemoEnum.Item1">
            <summary>
            Enum value "Item1"
            </summary>
        </member>
        <member name="F:DemoProject.DemoEnum.Item2">
            <summary>
            Enum value "Item2"
            </summary>
        </member>
        <member name="F:DemoProject.DemoEnum.AnotherItem">
            <summary>
            Yet another enum value
            </summary>
        </member>
        <member name="T:DemoProject.DemoPropertyAnnotationAttribute">
            <summary>
            An example of a custom attribute that is used to annotate a property with custom flags
            </summary>
        </member>
    </members>
</doc>
